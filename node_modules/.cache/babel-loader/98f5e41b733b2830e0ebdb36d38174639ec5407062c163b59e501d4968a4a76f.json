{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szhivtsova\\\\education\\\\projects\\\\01-first-project\\\\social-network-react\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { setUserProfile } from '../../redux/profile-reducer';\n// import {withRouter} from \"react-router-dom\"\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\n// export function withRouter(Children){\n//     return(props)=>{\n\n//        const match  = {params: useParams()};\n//        return <Children {...props}  match = {match}/>\n//    }\n//  }\n\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\n// function withRouter(Component) {\n//     function ComponentWithRouterProp(props) {\n//         let location = useLocation();\n//         let navigate = useNavigate();\n//         let params = useParams();\n//         return (\n//             <Component\n//                 {...props}\n//                 // location={location}\n//                 // params={params}\n//                 // navigate={navigate}\n//                 router={{ location, navigate, params }}\n//             />\n//         );\n//     }\n\n//     return ComponentWithRouterProp;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withRouter = WrappedComponent => {\n  var _s = $RefreshSig$();\n  return _s(props => {\n    _s();\n    const params = useParams();\n    // etc... other react-router-dom v6 hooks\n    let location = useLocation();\n    let navigate = useNavigate();\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n      ...props,\n      params: params,\n      location: location,\n      navigate: navigate\n      // etc...\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }, \"jpFpGaltzpZnLp6gki8JFDzZlaY=\", false, function () {\n    return [useParams, useLocation, useNavigate];\n  });\n};\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.params.userId;\n    if (!userId) {\n      userId = 2;\n    }\n    axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId).then(response => {\n      this.props.setUserProfile(response.data);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile\n});\n\n// Возвращает новую контейнерную компоненту, в которую закинутся данные из URL\n// let WithUrlDataContainerComponent = withRouter(ProfileContainer);\n\n// // Возвращает новую компоненту, в которую закинутся данные из STORE, которая отрисует ProfileContainer\n// export default connect(mapStateToProps, {setUserProfile}) (WithUrlDataContainerComponent);\n\nexport default connect(mapStateToProps, {\n  setUserProfile\n})(withRouter(ProfileContainer));","map":{"version":3,"names":["axios","React","connect","Profile","setUserProfile","useLocation","useNavigate","useParams","withRouter","WrappedComponent","props","params","location","navigate","ProfileContainer","Component","componentDidMount","userId","get","then","response","data","render","profile","mapStateToProps","state","profilePage"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { setUserProfile } from '../../redux/profile-reducer';\r\n// import {withRouter} from \"react-router-dom\"\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\n\r\n// export function withRouter(Children){\r\n//     return(props)=>{\r\n\r\n//        const match  = {params: useParams()};\r\n//        return <Children {...props}  match = {match}/>\r\n//    }\r\n//  }\r\n\r\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\r\n// function withRouter(Component) {\r\n//     function ComponentWithRouterProp(props) {\r\n//         let location = useLocation();\r\n//         let navigate = useNavigate();\r\n//         let params = useParams();\r\n//         return (\r\n//             <Component\r\n//                 {...props}\r\n//                 // location={location}\r\n//                 // params={params}\r\n//                 // navigate={navigate}\r\n//                 router={{ location, navigate, params }}\r\n//             />\r\n//         );\r\n//     }\r\n\r\n//     return ComponentWithRouterProp;\r\n// }\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    const params = useParams();\r\n    // etc... other react-router-dom v6 hooks\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            params={params}\r\n            location={location}\r\n            navigate={navigate}\r\n            // etc...\r\n        />\r\n    );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.params.userId;\r\n        if(!userId) {\r\n            userId = 2;\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+userId)\r\n        .then(response => {\r\n            this.props.setUserProfile(response.data);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        profile: state.profilePage.profile\r\n    }\r\n)\r\n\r\n// Возвращает новую контейнерную компоненту, в которую закинутся данные из URL\r\n// let WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\n\r\n// // Возвращает новую компоненту, в которую закинутся данные из STORE, которая отрисует ProfileContainer\r\n// export default connect(mapStateToProps, {setUserProfile}) (WithUrlDataContainerComponent);\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {setUserProfile})(withRouter(ProfileContainer));"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,cAAc,QAAQ,6BAA6B;AAC5D;AACA,SACIC,WAAW,EACXC,WAAW,EACXC,SAAS,QACN,kBAAkB;;AAGzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA,MAAMC,UAAU,GAAGC,gBAAgB;EAAA;EAAA,UAAIC,KAAK,IAAI;IAAA;IAC5C,MAAMC,MAAM,GAAGJ,SAAS,EAAE;IAC1B;IACA,IAAIK,QAAQ,GAAGP,WAAW,EAAE;IAC5B,IAAIQ,QAAQ,GAAGP,WAAW,EAAE;IAC5B,oBACI,QAAC,gBAAgB;MAAA,GACTI,KAAK;MACT,MAAM,EAAEC,MAAO;MACf,QAAQ,EAAEC,QAAS;MACnB,QAAQ,EAAEC;MACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV,CAAC;IAAA,QAbkBN,SAAS,EAETF,WAAW,EACXC,WAAW;EAAA;AAAA,CAU7B;AAED,MAAMQ,gBAAgB,SAASb,KAAK,CAACc,SAAS,CAAC;EAC3CC,iBAAiB,GAAG;IAChB,IAAIC,MAAM,GAAG,IAAI,CAACP,KAAK,CAACC,MAAM,CAACM,MAAM;IACrC,IAAG,CAACA,MAAM,EAAE;MACRA,MAAM,GAAG,CAAC;IACd;IACAjB,KAAK,CAACkB,GAAG,CAAE,uDAAsD,GAACD,MAAM,CAAC,CACxEE,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACV,KAAK,CAACN,cAAc,CAACgB,QAAQ,CAACC,IAAI,CAAC;IAC5C,CAAC,CAAC;EACN;EAEAC,MAAM,GAAG;IACL,oBACI,QAAC,OAAO;MAAA,GAAK,IAAI,CAACZ,KAAK;MAAE,OAAO,EAAE,IAAI,CAACA,KAAK,CAACa;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAEhE;AACJ;AAEA,IAAIC,eAAe,GAAIC,KAAK,KACxB;EACIF,OAAO,EAAEE,KAAK,CAACC,WAAW,CAACH;AAC/B,CAAC,CACJ;;AAED;AACA;;AAEA;AACA;;AAIA,eAAerB,OAAO,CAACsB,eAAe,EAAE;EAACpB;AAAc,CAAC,CAAC,CAACI,UAAU,CAACM,gBAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}