{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szhivtsova\\\\education\\\\projects\\\\01-first-project\\\\social-network-react\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getUserProfile } from '../../redux/profile-reducer';\nimport { Navigate } from \"react-router-dom\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n// import { compose } from 'redux';\n// import {withRouter} from \"react-router-dom\"\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { compose } from 'redux';\n\n// 1 рабочий вариант\n//т.к. withRouter() нет в react router v6, то\n// Функция-обертка (контейнерная компонента) для передачи значения параметров url (значения userId) через props в  class ProfileContainer => для отрисовки в адресной строке\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\n// из доки https://reactrouter.com/en/main/start/faq\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n  function ComponentWithRouterProp(props) {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n}\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n      userId = 2;\n    }\n    this.props.getUserProfile(userId); // в адресную строку вручную добавить / перед номером id\n    this.props.getStatus(userId);\n  }\n  render() {\n    if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 39\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// Теперь в COMPOSE:\n// Контейнерная компонета возвращаемая HOC'ом\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status\n});\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\n\n// Эта функция объединила весь вышеописанный конвеер функций. ProfileContainer передается снизу вверх.\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"names":["React","connect","Profile","getUserProfile","Navigate","withAuthRedirect","useLocation","useNavigate","useParams","compose","withRouter","Component","ComponentWithRouterProp","props","location","navigate","params","ProfileContainer","componentDidMount","userId","router","getStatus","render","isAuth","profile","mapStateToProps","state","profilePage","status","updateStatus"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile } from '../../redux/profile-reducer';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n// import { compose } from 'redux';\r\n// import {withRouter} from \"react-router-dom\"\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\n\r\n// 1 рабочий вариант\r\n//т.к. withRouter() нет в react router v6, то\r\n// Функция-обертка (контейнерная компонента) для передачи значения параметров url (значения userId) через props в  class ProfileContainer => для отрисовки в адресной строке\r\n// wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)\r\n// из доки https://reactrouter.com/en/main/start/faq\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if(!userId) {\r\n            userId = 2;\r\n        }\r\n        this.props.getUserProfile(userId); // в адресную строку вручную добавить / перед номером id\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        if(!this.props.isAuth) return <Navigate to={'/login'} />; \r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// Теперь в COMPOSE:\r\n// Контейнерная компонета возвращаемая HOC'ом\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n    }\r\n)\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\r\n\r\n// Эта функция объединила весь вышеописанный конвеер функций. ProfileContainer передается снизу вверх.\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n) (ProfileContainer);\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D;AACA;AACA,SACIC,WAAW,EACXC,WAAW,EACXC,SAAS,QACN,kBAAkB;AACzB,SAASC,OAAO,QAAQ,OAAO;;AAE/B;AACA;AACA;AACA;AACA;AAAA;AACA,SAASC,UAAU,CAACC,SAAS,EAAE;EAAA;EAC3B,SAASC,uBAAuB,CAACC,KAAK,EAAE;IAAA;IACpC,IAAIC,QAAQ,GAAGR,WAAW,EAAE;IAC5B,IAAIS,QAAQ,GAAGR,WAAW,EAAE;IAC5B,IAAIS,MAAM,GAAGR,SAAS,EAAE;IACxB,oBACI,QAAC,SAAS;MAAA,GACFK,KAAK;MACT,MAAM,EAAE;QAAEC,QAAQ;QAAEC,QAAQ;QAAEC;MAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QACzC;EAEV;EAAC,GAVQJ,uBAAuB;IAAA,QACbN,WAAW,EACXC,WAAW,EACbC,SAAS;EAAA;EAS1B,OAAOI,uBAAuB;AAClC;AAEA,MAAMK,gBAAgB,SAASjB,KAAK,CAACW,SAAS,CAAC;EAC3CO,iBAAiB,GAAG;IAChB,IAAIC,MAAM,GAAG,IAAI,CAACN,KAAK,CAACO,MAAM,CAACJ,MAAM,CAACG,MAAM;IAC5C,IAAG,CAACA,MAAM,EAAE;MACRA,MAAM,GAAG,CAAC;IACd;IACA,IAAI,CAACN,KAAK,CAACV,cAAc,CAACgB,MAAM,CAAC,CAAC,CAAC;IACnC,IAAI,CAACN,KAAK,CAACQ,SAAS,CAACF,MAAM,CAAC;EAChC;EACAG,MAAM,GAAG;IACL,IAAG,CAAC,IAAI,CAACT,KAAK,CAACU,MAAM,EAAE,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAE;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;IAExD,oBACI,QAAC,OAAO;MAAA,GAAK,IAAI,CAACV,KAAK;MAAE,OAAO,EAAE,IAAI,CAACA,KAAK,CAACW;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAEhE;AACJ;;AAGA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAK,KACxB;EACIF,OAAO,EAAEE,KAAK,CAACC,WAAW,CAACH,OAAO;EAClCI,MAAM,EAAEF,KAAK,CAACC,WAAW,CAACC;AAC9B,CAAC,CACJ;;AAED;;AAEA;;AAEA;AACA,eAAenB,OAAO,CAClBR,OAAO,CAACwB,eAAe,EAAE;EAACtB,cAAc;EAAEkB,SAAS;EAAEQ;AAAY,CAAC,CAAC,EACnEnB,UAAU,EACVL,gBAAgB,CACnB,CAAEY,gBAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}