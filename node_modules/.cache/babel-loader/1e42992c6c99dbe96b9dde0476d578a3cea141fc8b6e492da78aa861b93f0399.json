{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szhivtsova\\\\education\\\\projects\\\\01-first-project\\\\social-network-react\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followActionCreator, unfollowActionCreator, setUsersActionCreator, setCurrentPageActionCreator, setUsersTotalCountActionCreator, toggleIsFetchingActionCreator } from '../../redux/users-reducer';\nimport axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/preloader/Preloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersAPIComponent extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 39\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followActionCreator(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowActionCreator(userId));\n    },\n    // users приходят извне\n    setUsers: users => {\n      dispatch(setUsersActionCreator(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageActionCreator(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountActionCreator(totalCount));\n    },\n    // toggleIsFetchingActionCreator(isFetching) возвращает объект action который диспатчим\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingActionCreator(isFetching));\n    }\n  };\n};\nexport default connect(mapStateToProps, {\n  follow: followActionCreator(userId),\n  unfollow: unfollowActionCreator(userId),\n  setUsers: setUsersActionCreator(users),\n  setCurrentPage: setCurrentPageActionCreator(pageNumber),\n  setTotalUsersCount: setUsersTotalCountActionCreator(totalCount),\n  toggleIsFetching: toggleIsFetchingActionCreator(isFetching)\n})(UsersAPIComponent);","map":{"version":3,"names":["React","connect","followActionCreator","unfollowActionCreator","setUsersActionCreator","setCurrentPageActionCreator","setUsersTotalCountActionCreator","toggleIsFetchingActionCreator","axios","Users","Preloader","UsersAPIComponent","Component","onPageChanged","pageNumber","props","toggleIsFetching","setCurrentPage","get","pageSize","then","response","setUsers","data","items","setTotalUsersCount","totalCount","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/components/Users/UsersContainer.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { followActionCreator, unfollowActionCreator, setUsersActionCreator, setCurrentPageActionCreator, setUsersTotalCountActionCreator, toggleIsFetchingActionCreator } from '../../redux/users-reducer'; \r\nimport axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followActionCreator(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowActionCreator(userId));\r\n        },\r\n        // users приходят извне\r\n        setUsers: (users) => {\r\n            dispatch(setUsersActionCreator(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageActionCreator(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountActionCreator(totalCount));\r\n        },\r\n        // toggleIsFetchingActionCreator(isFetching) возвращает объект action который диспатчим\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingActionCreator(isFetching));\r\n        },\r\n       \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow: followActionCreator(userId),\r\n    unfollow: unfollowActionCreator(userId),\r\n    setUsers: setUsersActionCreator(users),\r\n    setCurrentPage: setCurrentPageActionCreator(pageNumber),\r\n    setTotalUsersCount: setUsersTotalCountActionCreator(totalCount),\r\n    toggleIsFetching: toggleIsFetchingActionCreator(isFetching),\r\n}) (UsersAPIComponent);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}