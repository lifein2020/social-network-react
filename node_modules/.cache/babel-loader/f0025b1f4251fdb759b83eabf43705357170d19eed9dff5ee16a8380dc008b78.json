{"ast":null,"code":"import { usersAPI, profileAPI } from '../api/api';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = \"SET_STATUS\";\n\n// Объект, передаваемый в качестве первоначального значения (скопировали из store.js -> _state -> profilePage)\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hello! How are you?',\n    likesCount: 7\n  }, {\n    id: 2,\n    message: 'It\\'s time to go snowboarding! Who goes with me?',\n    likesCount: 9\n  }, {\n    id: 3,\n    message: 'Aloha! I\\'m on Havai!',\n    likesCount: 7\n  }],\n  newPostText: \"Samurai way\",\n  profile: null,\n  status: \"\"\n};\n\n// Инициализируем начальное значение с помощью параметров по умолчанию state = initialState\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // debugger\n  switch (action.type) {\n    case ADD_POST:\n      {\n        // фигурные кавычки, т.к. stateCopy в каждом свой\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          likesCount: 0\n        };\n        return {\n          ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return {\n          ...state,\n          newPostText: action.newText\n        };\n      }\n    case SET_STATUS:\n      {\n        return {\n          ...state,\n          status: action.status\n        };\n      }\n    case SET_USER_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    default:\n      return state;\n  }\n};\n\n// action creators\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\n\n//thunk\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport const getStatus = userId = dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    debugger;\n    dispatch(setStatus(response.data));\n  });\n};\nexport const updateStatus = status = dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    debugger;\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"names":["usersAPI","profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likesCount","newPostText","profile","status","profileReducer","state","action","type","newPost","newText","addPostActionCreator","updateNewPostTextActionCreator","text","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","then","response","data","getStatus","updateStatus","resultCode"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/redux/profile-reducer.js"],"sourcesContent":["import { usersAPI, profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\n// Объект, передаваемый в качестве первоначального значения (скопировали из store.js -> _state -> profilePage)\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hello! How are you?', likesCount: 7 },\r\n        { id: 2, message: 'It\\'s time to go snowboarding! Who goes with me?', likesCount: 9 },\r\n        { id: 3, message: 'Aloha! I\\'m on Havai!', likesCount: 7 },\r\n    ],\r\n    newPostText: \"Samurai way\",\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\n// Инициализируем начальное значение с помощью параметров по умолчанию state = initialState\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    // debugger\r\n    switch (action.type) {\r\n        case ADD_POST: { // фигурные кавычки, т.к. stateCopy в каждом свой\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n// action creators\r\nexport const addPostActionCreator = () => ({ type: ADD_POST })\r\nexport const updateNewPostTextActionCreator = (text) => (\r\n    { type: UPDATE_NEW_POST_TEXT, newText: text }\r\n)\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\n//thunk\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n}\r\n\r\nexport const getStatus = (userId) = (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n    .then(response => {\r\n        debugger\r\n        dispatch(setStatus(response.data));\r\n    });\r\n}\r\n\r\nexport const updateStatus = (status) = (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n    .then(response => {\r\n        debugger\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport default profileReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}