{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\n// Объект, передаваемый в качестве первоначального значения (скопировали из store.js -> _state -> profilePage)\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hello! How are you?',\n    likesCount: 7\n  }, {\n    id: 2,\n    message: 'It\\'s time to go snowboarding! Who goes with me?',\n    likesCount: 9\n  }, {\n    id: 3,\n    message: 'Aloha! I\\'m on Havai!',\n    likesCount: 7\n  }],\n  newPostText: \"Samurai way\"\n};\n\n// Инициализируем начальное значение с помощью параметров по умолчанию state = initialState\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // debugger\n  switch (action.type) {\n    case ADD_POST:\n      {\n        // фигурные кавычки, т.к. stateCopy в каждом свой\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          likesCount: 0\n        };\n        // 1 способ\n        return {\n          ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n    case UPDATE_NEW_POST_TEXT:\n      {\n        // 1 способ\n        return {\n          ...state,\n          newPostText: action.newText\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport default profileReducer;","map":{"version":3,"names":["FOLLOW","UNFOLLOW","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","likesCount","newPostText","profileReducer","state","action","type","ADD_POST","newPost","newText","addPostActionCreator","updateNewPostTextActionCreator","text"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/redux/profile-reducer.js"],"sourcesContent":["const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\n// Объект, передаваемый в качестве первоначального значения (скопировали из store.js -> _state -> profilePage)\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hello! How are you?', likesCount: 7 },\r\n        { id: 2, message: 'It\\'s time to go snowboarding! Who goes with me?', likesCount: 9 },\r\n        { id: 3, message: 'Aloha! I\\'m on Havai!', likesCount: 7 },\r\n    ],\r\n    newPostText: \"Samurai way\",\r\n};\r\n\r\n// Инициализируем начальное значение с помощью параметров по умолчанию state = initialState\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    // debugger\r\n    switch (action.type) {\r\n        case ADD_POST: { // фигурные кавычки, т.к. stateCopy в каждом свой\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            // 1 способ\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            }\r\n\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            // 1 способ\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST })\r\nexport const updateNewPostTextActionCreator = (text) => (\r\n    { type: UPDATE_NEW_POST_TEXT, newText: text }\r\n)\r\n\r\n\r\nexport default profileReducer;"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAQ;AACvB,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,oBAAoB,GAAG,sBAAsB;;AAEnD;AACA,IAAIC,YAAY,GAAG;EACfC,KAAK,EAAE,CACH;IAAEC,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,qBAAqB;IAAEC,UAAU,EAAE;EAAE,CAAC,EACxD;IAAEF,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,kDAAkD;IAAEC,UAAU,EAAE;EAAE,CAAC,EACrF;IAAEF,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,uBAAuB;IAAEC,UAAU,EAAE;EAAE,CAAC,CAC7D;EACDC,WAAW,EAAE;AACjB,CAAC;;AAED;;AAEA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGP,YAAY;EAAA,IAAEQ,MAAM;EAChD;EACA,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKC,QAAQ;MAAE;QAAE;QACb,IAAIC,OAAO,GAAG;UACVT,EAAE,EAAE,CAAC;UACLC,OAAO,EAAEI,KAAK,CAACF,WAAW;UAC1BD,UAAU,EAAE;QAChB,CAAC;QACD;QACA,OAAO;UACH,GAAGG,KAAK;UACRN,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAK,EAAEU,OAAO,CAAC;UAChCN,WAAW,EAAE;QACjB,CAAC;MAEL;IAEA,KAAKN,oBAAoB;MAAE;QACvB;QACA,OAAO;UACH,GAAGQ,KAAK;UACRF,WAAW,EAAEG,MAAM,CAACI;QACxB,CAAC;MACL;IACA;MACI,OAAOL,KAAK;EAAC;AAGzB,CAAC;AAED,OAAO,MAAMM,oBAAoB,GAAG,OAAO;EAAEJ,IAAI,EAAEC;AAAS,CAAC,CAAC;AAC9D,OAAO,MAAMI,8BAA8B,GAAIC,IAAI,KAC/C;EAAEN,IAAI,EAAEV,oBAAoB;EAAEa,OAAO,EAAEG;AAAK,CAAC,CAChD;AAGD,eAAeT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}