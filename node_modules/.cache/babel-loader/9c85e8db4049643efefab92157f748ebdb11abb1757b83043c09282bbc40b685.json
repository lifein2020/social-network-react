{"ast":null,"code":"import { Action } from \"@remix-run/router\";\n// const FOLLOW = 'FOLLOW';\n// const UNFOLLOW = 'UNFOLLOW';\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n// Объект, передаваемый в качестве первоначального значения (скопировали из store.js -> _state -> profilePage)\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null\n  // isFetching: true\n};\n\n// Инициализируем начальное значение с помощью параметров по умолчанию state = initialState\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // debugger\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data // в объекте лежат userId, email,login - они перезатрут те userId, email, login что лежат в state\n      };\n\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\nexport default authReducer;","map":{"version":3,"names":["Action","SET_USER_DATA","initialState","userId","email","login","authReducer","state","action","type","data","setAuthUserData"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/redux/auth-reducer.js"],"sourcesContent":["import { Action } from \"@remix-run/router\";\r\n// const FOLLOW = 'FOLLOW';\r\n// const UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n// Объект, передаваемый в качестве первоначального значения (скопировали из store.js -> _state -> profilePage)\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    // isFetching: true\r\n};\r\n\r\n// Инициализируем начальное значение с помощью параметров по умолчанию state = initialState\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    // debugger\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data, // в объекте лежат userId, email,login - они перезатрут те userId, email, login что лежат в state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email,login) => ({ type: SET_USER_DATA, data: { userId, email,login } });\r\n\r\nexport default authReducer;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C;AACA;AACA,MAAMC,aAAa,GAAG,eAAe;;AAErC;AACA,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;EACP;AACJ,CAAC;;AAED;;AAEA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EAC7C;EACA,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKR,aAAa;MACd,OAAO;QACH,GAAGM,KAAK;QACR,GAAGC,MAAM,CAACE,IAAI,CAAE;MACpB,CAAC;;IACL;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,CAACR,MAAM,EAAEC,KAAK,EAACC,KAAK,MAAM;EAAEI,IAAI,EAAER,aAAa;EAAES,IAAI,EAAE;IAAEP,MAAM;IAAEC,KAAK;IAACC;EAAM;AAAE,CAAC,CAAC;AAEhH,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}