{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szhivtsova\\\\education\\\\projects\\\\01-first-project\\\\social-network-react\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from 'react';\nimport Header from './Header';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    // this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\n      withCredentials: true // этот параметр get запроса - настройки запроса. Т.к. мы отправляем на сервер куку\n    }).then(response => {\n      //    debugger // смотрим в F12 что в responce.data.message\n      if (response.data.resultCode === 0) {\n        this.props.setAuthUserData();\n      }\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Header, {\n      ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({});\nexport default connect(mapStateToProps, {\n  setAuthUserData\n})(HeaderContainer);","map":{"version":3,"names":["React","Header","axios","HeaderContainer","Component","componentDidMount","get","withCredentials","then","response","data","resultCode","props","setAuthUserData","render","mapStateToProps","state","connect"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/components/Header/HeaderContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport Header from './Header';\r\nimport axios from 'axios';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        // this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n            withCredentials: true // этот параметр get запроса - настройки запроса. Т.к. мы отправляем на сервер куку\r\n        })\r\n            .then(response => {\r\n    //    debugger // смотрим в F12 что в responce.data.message\r\n                if (response.data.resultCode === 0) {\r\n                    this.props.setAuthUserData();\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect (mapStateToProps, { setAuthUserData} ) (HeaderContainer);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,eAAe,SAASH,KAAK,CAACI,SAAS,CAAC;EAC1CC,iBAAiB,GAAG;IAChB;IACAH,KAAK,CAACI,GAAG,CAAE,sDAAqD,EAAE;MAC9DC,eAAe,EAAE,IAAI,CAAC;IAC1B,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;MAC1B;MACY,IAAIA,QAAQ,CAACC,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QAChC,IAAI,CAACC,KAAK,CAACC,eAAe,EAAE;MAChC;IACJ,CAAC,CAAC;EACV;EAEAC,MAAM,GAAG;IACL,oBAAO,QAAC,MAAM;MAAA,GAAK,IAAI,CAACF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI;EACrC;AACJ;AAEA,MAAMG,eAAe,GAAIC,KAAK,KAAM,CAAC,CAAC,CAAC;AAEvC,eAAeC,OAAO,CAAEF,eAAe,EAAE;EAAEF;AAAe,CAAC,CAAE,CAAEV,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}