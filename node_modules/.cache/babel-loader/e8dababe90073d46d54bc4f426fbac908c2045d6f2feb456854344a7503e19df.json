{"ast":null,"code":"import axios from \"axios\";\n\n// экземпляр axios. В нем все настройки запросов\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  header: {\n    \"API-KEY\": \"6d29aaca-9c33-4267-8483-b33b2\" // сгенерировано на сайте\n  }\n});\n\n// впомогательный объект, содержащий методы - упаковка для всех методов\nexport const usersAPI = {\n  getUsers() {\n    let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`) // === axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`)\n    .then(response => {\n      return response.data; // чтобы в компоненту не передавалось ничего лишнего\n    });\n  },\n\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n  // Избавляемся от дублирования кода...\n  // getProfile(userId) {\n  //     return instance.get(`profile/` + userId);\n  // }\n  //... делегируем вызов. Backward compatibility\n  getProfile(userId) {\n    console.warn('Obsolete method. Please profileAPI object.');\n    return profileAPI.getProfile(userId);\n  }\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n  getStatus(userId) {\n    return instance.get(`status/` + userId);\n  },\n  updateStatus(status) {\n    return instance.put(`status`, {\n      status: status\n    }); //  в put отправляем на сервак вторым параметром согласно документации объект со свойством status\n  }\n};\n\nexport const authAPI = {\n  // запрос чтобы понять кто мы, залогинены или нет\n  me() {\n    return instance.get(`auth/me`);\n  }\n};","map":{"version":3,"names":["axios","instance","create","withCredentials","baseURL","header","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// экземпляр axios. В нем все настройки запросов\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    header: {\r\n        \"API-KEY\": \"6d29aaca-9c33-4267-8483-b33b2\" // сгенерировано на сайте\r\n    }\r\n})\r\n\r\n// впомогательный объект, содержащий методы - упаковка для всех методов\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`) // === axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data; // чтобы в компоненту не передавалось ничего лишнего\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    // Избавляемся от дублирования кода...\r\n    // getProfile(userId) {\r\n    //     return instance.get(`profile/` + userId);\r\n    // }\r\n    //... делегируем вызов. Backward compatibility\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`status`, { status: status }); //  в put отправляем на сервак вторым параметром согласно документации объект со свойством status\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n     // запрос чтобы понять кто мы, залогинены или нет\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,+CAA+C;EACxDC,MAAM,EAAE;IACJ,SAAS,EAAE,+BAA+B,CAAC;EAC/C;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,QAAQ,GAAG;EACpBC,QAAQ,GAAiC;IAAA,IAAhCC,WAAW,uEAAG,CAAC;IAAA,IAAEC,QAAQ,uEAAG,EAAE;IACnC,OAAOR,QAAQ,CAACS,GAAG,CAAE,cAAaF,WAAY,UAASC,QAAS,EAAC,CAAC,CAAC;IAAA,CAC9DE,IAAI,CAACC,QAAQ,IAAI;MACd,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC;;EACDC,MAAM,CAACC,MAAM,EAAE;IACX,OAAOd,QAAQ,CAACe,IAAI,CAAE,UAASD,MAAO,EAAC,CAAC;EAC5C,CAAC;EACDE,QAAQ,CAACF,MAAM,EAAE;IACb,OAAOd,QAAQ,CAACiB,MAAM,CAAE,UAASH,MAAO,EAAC,CAAC;EAC9C,CAAC;EACD;EACA;EACA;EACA;EACA;EACAI,UAAU,CAACJ,MAAM,EAAE;IACfK,OAAO,CAACC,IAAI,CAAC,4CAA4C,CAAC;IAC1D,OAAOC,UAAU,CAACH,UAAU,CAACJ,MAAM,CAAC;EACxC;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG;EACtBH,UAAU,CAACJ,MAAM,EAAE;IACf,OAAOd,QAAQ,CAACS,GAAG,CAAE,UAAS,GAAGK,MAAM,CAAC;EAC5C,CAAC;EACDQ,SAAS,CAACR,MAAM,EAAE;IACd,OAAOd,QAAQ,CAACS,GAAG,CAAE,SAAQ,GAAGK,MAAM,CAAC;EAC3C,CAAC;EACDS,YAAY,CAACC,MAAM,EAAE;IACjB,OAAOxB,QAAQ,CAACyB,GAAG,CAAE,QAAO,EAAE;MAAED,MAAM,EAAEA;IAAO,CAAC,CAAC,CAAC,CAAC;EACvD;AACJ,CAAC;;AAED,OAAO,MAAME,OAAO,GAAG;EAClB;EACDC,EAAE,GAAG;IACD,OAAO3B,QAAQ,CAACS,GAAG,CAAE,SAAQ,CAAC;EAClC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}