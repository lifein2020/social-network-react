{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szhivtsova\\\\education\\\\projects\\\\01-first-project\\\\social-network-react\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\n// import s from './MyPosts.module.css';\nimport React from 'react';\nimport Post from './Post/Post';\nimport s from './MyPosts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet addPostActionCreator = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nupdateNewPostTextActionCreator = text => {\n  return {\n    type: 'UPDATE_NEW_POST_TEXT',\n    newText: text\n  };\n};\nconst MyPosts = _ref => {\n  let {\n    posts,\n    dispatch\n  } = _ref;\n  console.log(dispatch);\n  // let posts = [\n  //     {id: 1, message: 'Hello! How are you?', likesCount: 7},\n  //     {id: 2, message: 'It\\'s time to go snowboarding! Who goes with me?', likesCount: 9},\n  //     {id: 3, message: 'Aloha! I\\'m on Havai!', likesCount: 7},\n  // ];\n\n  let postsElements = posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n    message: post.message,\n    likesCount: post.likesCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 43\n  }, this));\n  let newPostElement = /*#__PURE__*/React.createRef();\n  let addPost = () => {\n    // console.log(newPostElement)\n    let text = newPostElement.current.value;\n    // console.log(text)\n    // alert(text);\n    dispatch(UPDATE_NEW_POST_TEXT);\n  };\n  let onPostChange = () => {\n    let text = newPostElement.current.value;\n    let action = updateNewPostTextActionCreator(text);\n    props.dispatch(action);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: onPostChange,\n          ref: newPostElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPost,\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","Post","s","addPostActionCreator","type","updateNewPostTextActionCreator","text","newText","MyPosts","posts","dispatch","console","log","postsElements","map","post","message","likesCount","newPostElement","createRef","addPost","current","value","UPDATE_NEW_POST_TEXT","onPostChange","action","props","postsBlock"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["// import s from './MyPosts.module.css';\r\nimport React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\n\r\nlet addPostActionCreator = () => {\r\n    return {\r\n        type: 'ADD-POST'\r\n    }\r\n} \r\n\r\nupdateNewPostTextActionCreator = (text) => {\r\n    return { type: 'UPDATE_NEW_POST_TEXT', newText: text}\r\n}\r\n\r\nconst MyPosts = ({ posts, dispatch }) => {\r\nconsole.log(dispatch)\r\n    // let posts = [\r\n    //     {id: 1, message: 'Hello! How are you?', likesCount: 7},\r\n    //     {id: 2, message: 'It\\'s time to go snowboarding! Who goes with me?', likesCount: 9},\r\n    //     {id: 3, message: 'Aloha! I\\'m on Havai!', likesCount: 7},\r\n    // ];\r\n\r\n    let postsElements = posts.map(post => <Post message={post.message} likesCount={post.likesCount} />);\r\n    \r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = () => {\r\n        // console.log(newPostElement)\r\n        let text = newPostElement.current.value;\r\n        // console.log(text)\r\n        // alert(text);\r\n        dispatch(UPDATE_NEW_POST_TEXT);\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        let action = updateNewPostTextActionCreator(text);\r\n        props.dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}></textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,CAAC,MAAM,sBAAsB;AAAA;AAEpC,IAAIC,oBAAoB,GAAG,MAAM;EAC7B,OAAO;IACHC,IAAI,EAAE;EACV,CAAC;AACL,CAAC;AAEDC,8BAA8B,GAAIC,IAAI,IAAK;EACvC,OAAO;IAAEF,IAAI,EAAE,sBAAsB;IAAEG,OAAO,EAAED;EAAI,CAAC;AACzD,CAAC;AAED,MAAME,OAAO,GAAG,QAAyB;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC;EACpCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACjB;EACA;EACA;EACA;EACA;;EAEA,IAAIG,aAAa,GAAGJ,KAAK,CAACK,GAAG,CAACC,IAAI,iBAAI,QAAC,IAAI;IAAC,OAAO,EAAEA,IAAI,CAACC,OAAQ;IAAC,UAAU,EAAED,IAAI,CAACE;EAAW;IAAA;IAAA;IAAA;EAAA,QAAG,CAAC;EAEnG,IAAIC,cAAc,gBAAGlB,KAAK,CAACmB,SAAS,EAAE;EAEtC,IAAIC,OAAO,GAAG,MAAM;IAChB;IACA,IAAId,IAAI,GAAGY,cAAc,CAACG,OAAO,CAACC,KAAK;IACvC;IACA;IACAZ,QAAQ,CAACa,oBAAoB,CAAC;EAClC,CAAC;EAED,IAAIC,YAAY,GAAG,MAAM;IACrB,IAAIlB,IAAI,GAAGY,cAAc,CAACG,OAAO,CAACC,KAAK;IACvC,IAAIG,MAAM,GAAGpB,8BAA8B,CAACC,IAAI,CAAC;IACjDoB,KAAK,CAAChB,QAAQ,CAACe,MAAM,CAAC;EAC1B,CAAC;EAED,oBACI;IAAK,SAAS,EAAEvB,CAAC,CAACyB,UAAW;IAAA,wBACzB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAA,wBACI;QAAA,uBACI;UAAU,QAAQ,EAAGH,YAAc;UAAC,GAAG,EAAEN;QAAe;UAAA;UAAA;UAAA;QAAA;MAAY;QAAA;QAAA;QAAA;MAAA,QAClE,eACN;QAAA,uBACI;UAAQ,OAAO,EAAEE,OAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAkB;QAAA;QAAA;QAAA;MAAA,QACzC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAElB,CAAC,CAACO,KAAM;MAAA,UACnBI;IAAa;MAAA;MAAA;MAAA;IAAA,QACZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KA1CKL,OAAO;AA4Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}