{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szhivtsova\\\\education\\\\projects\\\\01-first-project\\\\social-network-react\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\nimport axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/preloader/Preloader';\nimport { getUsers } from '../../api/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersAPIComponent extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      }).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers(this.props.currentPage, this.page.pageSize).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersAPIComponent);","map":{"version":3,"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","axios","Users","Preloader","getUsers","UsersAPIComponent","Component","onPageChanged","pageNumber","props","get","pageSize","withCredentials","then","response","data","items","totalCount","componentDidMount","currentPage","page","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/components/Users/UsersContainer.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\r\nimport axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { getUsers } from '../../api/api.js'\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        getUsers(this.props.currentPage, this.page.pageSize)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, })(UsersAPIComponent)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}