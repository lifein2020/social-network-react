{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szhivtsova\\\\education\\\\projects\\\\01-first-project\\\\social-network-react\\\\src\\\\hoc\\\\withAuthRedirect.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const withAuthRedirect = Component => {\n  // можно создать класс, можно - функцию для каждой целевой компоненты (Component)\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: '/login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 43\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, {\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  let mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n  });\n  // обертка для того чтобы автоматически передать isAuth из mapStateToProps\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"names":["React","Navigate","connect","withAuthRedirect","Component","RedirectComponent","render","props","isAuth","mapStateToPropsForRedirect","state","auth","ConnectedAuthRedirectComponent"],"sources":["C:/Users/szhivtsova/education/projects/01-first-project/social-network-react/src/hoc/withAuthRedirect.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    // можно создать класс, можно - функцию для каждой целевой компоненты (Component)\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to={'/login'} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => (\r\n        {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    )\r\n    // обертка для того чтобы автоматически передать isAuth из mapStateToProps\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,aAAa;AAAC;AAEtC,OAAO,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;EAC3C;EACA,MAAMC,iBAAiB,SAASL,KAAK,CAACI,SAAS,CAAC;IAC5CE,MAAM,GAAG;MACL,IAAG,CAAC,IAAI,CAACC,KAAK,CAACC,MAAM,EAAE,oBAAO,QAAC,QAAQ;QAAC,EAAE,EAAE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;MAExD,oBAAO,QAAC,SAAS;QAAA,GAAK,IAAI,CAACD;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI;IACxC;EACJ;EAEA,IAAIE,0BAA0B,GAAIC,KAAK,KACnC;IACIF,MAAM,EAAEE,KAAK,CAACC,IAAI,CAACH;EACvB,CAAC,CACJ;EACD;EACA,IAAII,8BAA8B,GAAGV,OAAO,CAACO,0BAA0B,CAAC,CAAEJ,iBAAiB,CAAC;EAE5F,OAAOO,8BAA8B;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}